{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joseb\\\\OneDrive - Universidad Complutense de Madrid (UCM)\\\\Documentos\\\\React\\\\React-BootCamp-\\\\part2\\\\practice\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\r\nAnother type of using \r\nconst Title = ({course}) => <h1>{course}</h1>\r\n\r\n*/\nconst Title = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Title;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.msg, \" \", props.number]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = Part;\n\nconst Content = props => {\n  console.log(props);\n  /* If we had ids in the objects we could use this part of the code \r\n  return (<div>\r\n  {props.parts.map(item => <Part key= {item.key} msg={item.name} number={item.exercises} />)}\r\n  </div>)\r\n  */\n  //If you dont have any ids, one possibility is using index:\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.parts.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(Part, {\n        msg: item.name,\n        number: item.exercises\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this); //React uses keys to create child trees to give priority to the objects in an array, I think that how it works but I really dont know :( \n\n  /* If you dont want to use loops you could always use the safe way\r\n    return (<div>\r\n    \r\n    <Part msg = {msgs[0]} number = {numbers[0]} ></Part>\r\n    <Part msg = {msgs[1]} number = {numbers[1]} ></Part>\r\n    <Part msg = {msgs[2]} number = {numbers[2]} ></Part>\r\n    \r\n  </div>)\r\n    */\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  const array = [1, 2, 3, 4];\n  const initialValue = 0;\n\n  const reducer = (s, p) => s + p;\n\n  const sumatory = array.reduce(reducer, initialValue);\n  console.log(sumatory);\n  const suma = 0;\n  const total = props.parts.reduce(reducer, suma);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: ['Total of exercises ', \" \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\n_c4 = Total;\n\nconst Course = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Course;\n\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Course, {\n    course: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n};\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"Course\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["Title","props","course","Part","msg","number","Content","console","log","parts","map","item","name","exercises","id","Total","array","initialValue","reducer","s","p","sumatory","reduce","suma","total","Course","App"],"sources":["C:/Users/joseb/OneDrive - Universidad Complutense de Madrid (UCM)/Documentos/React/React-BootCamp-/part2/practice/src/App.js"],"sourcesContent":["\r\n/*\r\nAnother type of using \r\nconst Title = ({course}) => <h1>{course}</h1>\r\n\r\n*/\r\nconst Title = (props) => {\r\n  return <h1>{props.course}</h1>\r\n}\r\n\r\nconst Part = (props) => {\r\n  return <p>{props.msg} {props.number}</p>\r\n}\r\n\r\nconst Content = (props) => {\r\n  console.log(props);\r\n\r\n  /* If we had ids in the objects we could use this part of the code \r\n  return (<div>\r\n  {props.parts.map(item => <Part key= {item.key} msg={item.name} number={item.exercises} />)}\r\n  </div>)\r\n  */\r\n\r\n  //If you dont have any ids, one possibility is using index:\r\n  return (\r\n    <div>\r\n      {props.parts.map(function (item) {\r\n        return <Part key={item.id} msg={item.name} number={item.exercises} />;\r\n      })}\r\n    </div>\r\n  )\r\n\r\n  //React uses keys to create child trees to give priority to the objects in an array, I think that how it works but I really dont know :( \r\n\r\n  /* If you dont want to use loops you could always use the safe way\r\n\r\n  return (<div>\r\n    \r\n    <Part msg = {msgs[0]} number = {numbers[0]} ></Part>\r\n    <Part msg = {msgs[1]} number = {numbers[1]} ></Part>\r\n    <Part msg = {msgs[2]} number = {numbers[2]} ></Part>\r\n    \r\n  </div>)\r\n\r\n  */\r\n\r\n}\r\n\r\nconst Total = (props) => {\r\n  const array = [1, 2, 3, 4]\r\n  const initialValue = 0;\r\n  const reducer = (s, p) => s+p\r\n  const sumatory = array.reduce(reducer,initialValue)\r\n  console.log(sumatory)\r\n  const suma = 0;\r\n  const total = props.parts.reduce(reducer, suma)\r\n\r\n\r\n  return <p><strong>{'Total of exercises '} {total}</strong></p>\r\n}\r\n\r\nconst Course = ({ course }) => {\r\n  return (\r\n    <div>\r\n      <Title course={course.name} />\r\n      <Content parts={course.parts} />\r\n      <Total parts={course.parts} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const course = {\r\n    id: 1,\r\n    name: 'Half Stack application development',\r\n    parts: [\r\n      {\r\n        name: 'Fundamentals of React',\r\n        exercises: 10,\r\n        id: 1,\r\n      },\r\n      {\r\n        name: 'Using props to pass data',\r\n        exercises: 7,\r\n        id: 2,\r\n      },\r\n      {\r\n        name: 'State of a component',\r\n        exercises: 14,\r\n        id: 3,\r\n      },\r\n    ]\r\n  }\r\n  return <Course course={course} />\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,KAAK,GAAIC,KAAD,IAAW;EACvB,oBAAO;IAAA,UAAKA,KAAK,CAACC;EAAX;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAFD;;KAAMF,K;;AAIN,MAAMG,IAAI,GAAIF,KAAD,IAAW;EACtB,oBAAO;IAAA,WAAIA,KAAK,CAACG,GAAV,OAAgBH,KAAK,CAACI,MAAtB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAFD;;MAAMF,I;;AAIN,MAAMG,OAAO,GAAIL,KAAD,IAAW;EACzBM,OAAO,CAACC,GAAR,CAAYP,KAAZ;EAEA;AACF;AACA;AACA;AACA;EAEE;;EACA,oBACE;IAAA,UACGA,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAgB,UAAUC,IAAV,EAAgB;MAC/B,oBAAO,QAAC,IAAD;QAAoB,GAAG,EAAEA,IAAI,CAACC,IAA9B;QAAoC,MAAM,EAAED,IAAI,CAACE;MAAjD,GAAWF,IAAI,CAACG,EAAhB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA;EADH;IAAA;IAAA;IAAA;EAAA,QADF,CAVyB,CAkBzB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIC,CAhCD;;MAAMR,O;;AAkCN,MAAMS,KAAK,GAAId,KAAD,IAAW;EACvB,MAAMe,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAd;EACA,MAAMC,YAAY,GAAG,CAArB;;EACA,MAAMC,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAACC,CAA5B;;EACA,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAaJ,OAAb,EAAqBD,YAArB,CAAjB;EACAV,OAAO,CAACC,GAAR,CAAYa,QAAZ;EACA,MAAME,IAAI,GAAG,CAAb;EACA,MAAMC,KAAK,GAAGvB,KAAK,CAACQ,KAAN,CAAYa,MAAZ,CAAmBJ,OAAnB,EAA4BK,IAA5B,CAAd;EAGA,oBAAO;IAAA,uBAAG;MAAA,WAAS,qBAAT,OAAiCC,KAAjC;IAAA;MAAA;MAAA;MAAA;IAAA;EAAH;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAXD;;MAAMT,K;;AAaN,MAAMU,MAAM,GAAG,QAAgB;EAAA,IAAf;IAAEvB;EAAF,CAAe;EAC7B,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,MAAM,EAAEA,MAAM,CAACU;IAAtB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,KAAK,EAAEV,MAAM,CAACO;IAAvB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAO,KAAK,EAAEP,MAAM,CAACO;IAArB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CARD;;MAAMgB,M;;AAUN,MAAMC,GAAG,GAAG,MAAM;EAChB,MAAMxB,MAAM,GAAG;IACbY,EAAE,EAAE,CADS;IAEbF,IAAI,EAAE,oCAFO;IAGbH,KAAK,EAAE,CACL;MACEG,IAAI,EAAE,uBADR;MAEEC,SAAS,EAAE,EAFb;MAGEC,EAAE,EAAE;IAHN,CADK,EAML;MACEF,IAAI,EAAE,0BADR;MAEEC,SAAS,EAAE,CAFb;MAGEC,EAAE,EAAE;IAHN,CANK,EAWL;MACEF,IAAI,EAAE,sBADR;MAEEC,SAAS,EAAE,EAFb;MAGEC,EAAE,EAAE;IAHN,CAXK;EAHM,CAAf;EAqBA,oBAAO,QAAC,MAAD;IAAQ,MAAM,EAAEZ;EAAhB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAvBD;;MAAMwB,G;AAyBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}