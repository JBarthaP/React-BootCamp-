{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joseb\\\\OneDrive - Universidad Complutense de Madrid (UCM)\\\\Documentos\\\\React\\\\React-BootCamp-\\\\part2\\\\practice\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n/*\r\nAnother type of using \r\nconst Title = ({course}) => <h1>{course}</h1>\r\n\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Title;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.msg, \" \", props.number]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = Part;\n\nconst Content = props => {\n  console.log(props);\n  /* If we had ids in the objects we could use this part of the code \r\n  return (<div>\r\n  {props.parts.map(item => <Part key= {item.key} msg={item.name} number={item.exercises} />)}\r\n  </div>)\r\n  */\n  //If you dont have any ids, one possibility is using this:\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.parts.map(function (item, i) {\n      return /*#__PURE__*/_jsxDEV(Part, {\n        msg: item.name,\n        number: item.exercises\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this); //React uses keys to create child trees to give priority to the objects in an array, I think that how it works but I really dont know :( \n\n  /* If you dont want to use loops you could always use the safe way\r\n    return (<div>\r\n    \r\n    <Part msg = {msgs[0]} number = {numbers[0]} ></Part>\r\n    <Part msg = {msgs[1]} number = {numbers[1]} ></Part>\r\n    <Part msg = {msgs[2]} number = {numbers[2]} ></Part>\r\n    \r\n  </div>)\r\n    */\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  let suma = 0;\n  props.parts.forEach(element => {\n    suma += element.exercises;\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: ['Total of exercises ', \" \", suma]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\n_c4 = Total;\n\nconst Course = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Course;\n\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"Course\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","Title","props","course","Part","msg","number","Content","console","log","parts","map","item","i","name","exercises","Total","suma","forEach","element","Course","App","id"],"sources":["C:/Users/joseb/OneDrive - Universidad Complutense de Madrid (UCM)/Documentos/React/React-BootCamp-/part2/practice/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n/*\r\nAnother type of using \r\nconst Title = ({course}) => <h1>{course}</h1>\r\n\r\n*/ \r\nconst Title = (props) => {\r\n  return  <h1>{props.course}</h1>\r\n}\r\n\r\nconst Part = (props) => {\r\n  return <p>{props.msg} {props.number}</p>\r\n}\r\n\r\nconst Content = (props) => {\r\n  console.log(props);\r\n\r\n  /* If we had ids in the objects we could use this part of the code \r\n  return (<div>\r\n  {props.parts.map(item => <Part key= {item.key} msg={item.name} number={item.exercises} />)}\r\n  </div>)\r\n  */\r\n\r\n  //If you dont have any ids, one possibility is using this:\r\n  return (\r\n    <div>\r\n      {props.parts.map(function(item, i){\r\n        return <Part msg = {item.name} number = {item.exercises} key={i} />;\r\n    })}\r\n    </div>\r\n  )\r\n\r\n  //React uses keys to create child trees to give priority to the objects in an array, I think that how it works but I really dont know :( \r\n\r\n  /* If you dont want to use loops you could always use the safe way\r\n\r\n  return (<div>\r\n    \r\n    <Part msg = {msgs[0]} number = {numbers[0]} ></Part>\r\n    <Part msg = {msgs[1]} number = {numbers[1]} ></Part>\r\n    <Part msg = {msgs[2]} number = {numbers[2]} ></Part>\r\n    \r\n  </div>)\r\n\r\n  */\r\n  \r\n}\r\n\r\nconst Total = (props) => {\r\n  let suma = 0;\r\n  props.parts.forEach(element => {\r\n    suma+= element.exercises;\r\n  });\r\n  return <p>{'Total of exercises '} {suma}</p>\r\n}\r\n\r\nconst Course = ({course}) => {\r\n  return (\r\n    <div>\r\n      <Title course={course.name} />\r\n      <Content parts={course.parts} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const course = {\r\n    id: 1,\r\n    name: 'Half Stack application development',\r\n    parts: [\r\n      {\r\n        name: 'Fundamentals of React',\r\n        exercises: 10,\r\n        id: 1,\r\n      },\r\n      {\r\n        name: 'Using props to pass data',\r\n        exercises: 7,\r\n        id: 2,\r\n      },\r\n      {\r\n        name: 'State of a component',\r\n        exercises: 14,\r\n        id: 3,\r\n      },\r\n    ]\r\n  }\r\n  return (\r\n    <div>\r\n      <Title course={course.name} />\r\n      <Content parts={course.parts} />\r\n      <Total parts={course.parts} />\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAGA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EACvB,oBAAQ;IAAA,UAAKA,KAAK,CAACC;EAAX;IAAA;IAAA;IAAA;EAAA,QAAR;AACD,CAFD;;KAAMF,K;;AAIN,MAAMG,IAAI,GAAIF,KAAD,IAAW;EACtB,oBAAO;IAAA,WAAIA,KAAK,CAACG,GAAV,OAAgBH,KAAK,CAACI,MAAtB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAFD;;MAAMF,I;;AAIN,MAAMG,OAAO,GAAIL,KAAD,IAAW;EACzBM,OAAO,CAACC,GAAR,CAAYP,KAAZ;EAEA;AACF;AACA;AACA;AACA;EAEE;;EACA,oBACE;IAAA,UACGA,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAgB,UAASC,IAAT,EAAeC,CAAf,EAAiB;MAChC,oBAAO,QAAC,IAAD;QAAM,GAAG,EAAID,IAAI,CAACE,IAAlB;QAAwB,MAAM,EAAIF,IAAI,CAACG;MAAvC,GAAuDF,CAAvD;QAAA;QAAA;QAAA;MAAA,QAAP;IACH,CAFE;EADH;IAAA;IAAA;IAAA;EAAA,QADF,CAVyB,CAkBzB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIC,CAhCD;;MAAMN,O;;AAkCN,MAAMS,KAAK,GAAId,KAAD,IAAW;EACvB,IAAIe,IAAI,GAAG,CAAX;EACAf,KAAK,CAACQ,KAAN,CAAYQ,OAAZ,CAAoBC,OAAO,IAAI;IAC7BF,IAAI,IAAGE,OAAO,CAACJ,SAAf;EACD,CAFD;EAGA,oBAAO;IAAA,WAAI,qBAAJ,OAA4BE,IAA5B;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAND;;MAAMD,K;;AAQN,MAAMI,MAAM,GAAG,QAAc;EAAA,IAAb;IAACjB;EAAD,CAAa;EAC3B,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,MAAM,EAAEA,MAAM,CAACW;IAAtB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,KAAK,EAAEX,MAAM,CAACO;IAAvB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAPD;;MAAMU,M;;AASN,MAAMC,GAAG,GAAG,MAAM;EAChB,MAAMlB,MAAM,GAAG;IACbmB,EAAE,EAAE,CADS;IAEbR,IAAI,EAAE,oCAFO;IAGbJ,KAAK,EAAE,CACL;MACEI,IAAI,EAAE,uBADR;MAEEC,SAAS,EAAE,EAFb;MAGEO,EAAE,EAAE;IAHN,CADK,EAML;MACER,IAAI,EAAE,0BADR;MAEEC,SAAS,EAAE,CAFb;MAGEO,EAAE,EAAE;IAHN,CANK,EAWL;MACER,IAAI,EAAE,sBADR;MAEEC,SAAS,EAAE,EAFb;MAGEO,EAAE,EAAE;IAHN,CAXK;EAHM,CAAf;EAqBA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,MAAM,EAAEnB,MAAM,CAACW;IAAtB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,KAAK,EAAEX,MAAM,CAACO;IAAvB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAO,KAAK,EAAEP,MAAM,CAACO;IAArB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA7BD;;MAAMW,G"},"metadata":{},"sourceType":"module"}