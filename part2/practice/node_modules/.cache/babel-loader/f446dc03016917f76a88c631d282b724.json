{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joseb\\\\OneDrive - Universidad Complutense de Madrid (UCM)\\\\Documentos\\\\React\\\\React-BootCamp-\\\\part2\\\\practice\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Persons = _ref => {\n  let {\n    persons\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: persons.map(person => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: person.name\n    }, person.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Persons;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: ''\n  }]);\n  const [newName, setNewName] = useState('');\n\n  const handleChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleChangeNumber = event => set;\n  /*\r\n  The function 'some' helps as to know if the name already exists\r\n  This function searchs if in the array is any object with the description\r\n  callback function \r\n  */\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newObject = {\n      name: newName\n    };\n    const isAlreadyExists = persons.some(person => person.name === newName);\n\n    if (!isAlreadyExists) {\n      const copy = [...persons, newObject];\n      setPersons(copy);\n    } else {\n      alert(newName + ' is already added to phonebook');\n    }\n\n    setNewName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 27\n        }, this), \"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: handleChangeNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"ETdWiEvKDptmoDfHxPPNVDGj3/0=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Persons\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Persons","persons","map","person","name","App","setPersons","number","newName","setNewName","handleChange","event","target","value","handleChangeNumber","set","handleSubmit","preventDefault","newObject","isAlreadyExists","some","copy","alert","newNumber"],"sources":["C:/Users/joseb/OneDrive - Universidad Complutense de Madrid (UCM)/Documentos/React/React-BootCamp-/part2/practice/src/App.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nconst Persons = ({ persons }) => {\r\n    return (\r\n        <div>\r\n            {persons.map(person => <p key={person.name}>{person.name}</p>)}\r\n        </div>)\r\n}\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([\r\n        { name: 'Arto Hellas',number:'' }\r\n    ])\r\n    const [newName, setNewName] = useState('')\r\n\r\n    const handleChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handleChangeNumber = event => set\r\n\r\n    /*\r\n    The function 'some' helps as to know if the name already exists\r\n    This function searchs if in the array is any object with the description\r\n    callback function \r\n    */\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newObject = { name: newName }\r\n        const isAlreadyExists = persons.some((person) => person.name === newName)\r\n        if (!isAlreadyExists) {\r\n            const copy = [...persons, newObject]\r\n            setPersons(copy);\r\n        }else {\r\n            alert(newName + ' is already added to phonebook')\r\n        }\r\n        setNewName('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <form>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleChange} />\r\n                    name: <input value={newNumber} onChange={handleChangeNumber} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" onClick={handleSubmit} >add</button>\r\n                </div>\r\n            </form>\r\n            <h2>Numbers</h2>\r\n            <Persons persons={persons} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,OAAO,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC7B,oBACI;IAAA,UACKA,OAAO,CAACC,GAAR,CAAYC,MAAM,iBAAI;MAAA,UAAsBA,MAAM,CAACC;IAA7B,GAAQD,MAAM,CAACC,IAAf;MAAA;MAAA;MAAA;IAAA,QAAtB;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH,CALD;;KAAMJ,O;;AAQN,MAAMK,GAAG,GAAG,MAAM;EAAA;;EACd,MAAM,CAACJ,OAAD,EAAUK,UAAV,IAAwBP,QAAQ,CAAC,CACnC;IAAEK,IAAI,EAAE,aAAR;IAAsBG,MAAM,EAAC;EAA7B,CADmC,CAAD,CAAtC;EAGA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMW,YAAY,GAAIC,KAAD,IAAW;IAC5BF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;EACH,CAFD;;EAGA,MAAMC,kBAAkB,GAAGH,KAAK,IAAII,GAApC;EAEA;AACJ;AACA;AACA;AACA;;;EACI,MAAMC,YAAY,GAAIL,KAAD,IAAW;IAC5BA,KAAK,CAACM,cAAN;IACA,MAAMC,SAAS,GAAG;MAAEd,IAAI,EAAEI;IAAR,CAAlB;IACA,MAAMW,eAAe,GAAGlB,OAAO,CAACmB,IAAR,CAAcjB,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBI,OAAzC,CAAxB;;IACA,IAAI,CAACW,eAAL,EAAsB;MAClB,MAAME,IAAI,GAAG,CAAC,GAAGpB,OAAJ,EAAaiB,SAAb,CAAb;MACAZ,UAAU,CAACe,IAAD,CAAV;IACH,CAHD,MAGM;MACFC,KAAK,CAACd,OAAO,GAAG,gCAAX,CAAL;IACH;;IACDC,UAAU,CAAC,EAAD,CAAV;EACH,CAXD;;EAaA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,wBACI;QAAA,kCACU;UAAO,KAAK,EAAED,OAAd;UAAuB,QAAQ,EAAEE;QAAjC;UAAA;UAAA;UAAA;QAAA,QADV,yBAEU;UAAO,KAAK,EAAEa,SAAd;UAAyB,QAAQ,EAAET;QAAnC;UAAA;UAAA;UAAA;QAAA,QAFV;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAA,uBACI;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAEE,YAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAWI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXJ,eAYI,QAAC,OAAD;MAAS,OAAO,EAAEf;IAAlB;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CA7CD;;GAAMI,G;;MAAAA,G;AA+CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}