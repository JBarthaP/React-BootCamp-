{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joseb\\\\OneDrive - Universidad Complutense de Madrid (UCM)\\\\Documentos\\\\React\\\\React-BootCamp-\\\\part1\\\\unicafe\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    event,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: event(text),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = () => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(good + neutral + bad);\n  const [positive, setPositive] = useState(parseFloat(good / all) * 100);\n\n  const handleClick = params => {\n    return () => {\n      if (params === 'good') {\n        setGood(good + 1);\n      } else if (params === 'neutral') {\n        setNeutral(neutral + 1);\n      } else if (params === 'bad') {\n        setBad(bad + 1);\n      }\n\n      setAll(all + 1);\n      console.table('This is ' + all);\n      console.log(parseFloat(good / all));\n      setPositive(parseFloat(good / all) * 100);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      event: handleClick,\n      text: 'good'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      event: handleClick,\n      text: 'neutral'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      event: handleClick,\n      text: 'bad'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Aiitp18CweK1Md3A3BTF1rBik0E=\");\n\n_c3 = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","useState","Button","event","text","Statistics","App","good","setGood","neutral","setNeutral","bad","setBad","all","setAll","positive","setPositive","parseFloat","handleClick","params","console","table","log","root","createRoot","document","getElementById","render"],"sources":["C:/Users/joseb/OneDrive - Universidad Complutense de Madrid (UCM)/Documentos/React/React-BootCamp-/part1/unicafe/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { useState } from 'react';\n\nconst Button = ({ event, text }) => {\n  return (\n    <button onClick={event(text)}>\n      {text}\n    </button>)\n}\n\nconst Statistics = () => {\n  return (\n    <p></p>\n  )\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(good + neutral + bad)\n  const [positive, setPositive] = useState(parseFloat(good / all) * 100)\n\n\n  const handleClick = (params) => {\n    return () => {\n      if (params === 'good') {\n        setGood(good + 1);\n      } else if (params === 'neutral') {\n        setNeutral(neutral + 1);\n      } else if (params === 'bad') {\n        setBad(bad + 1);\n      }\n      setAll(all + 1);\n      console.table('This is ' + all)\n      console.log(parseFloat(good / all))\n      setPositive(parseFloat(good / all) * 100)\n    }\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button event={handleClick} text={'good'}></Button>\n      <Button event={handleClick} text={'neutral'}></Button>\n      <Button event={handleClick} text={'bad'}></Button>\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {all}</p>\n      <p>positive {positive} %</p>\n    </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}