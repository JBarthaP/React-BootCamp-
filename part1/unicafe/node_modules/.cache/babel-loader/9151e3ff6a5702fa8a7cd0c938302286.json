{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joseb\\\\OneDrive - Universidad Complutense de Madrid (UCM)\\\\Documentos\\\\React\\\\React-BootCamp-\\\\part1\\\\unicafe\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    event,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: event(text),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad\n  } = props;\n\n  const all = () => {\n    return good + neutral + bad;\n  };\n\n  const positive = () => {\n    const total = all();\n    return total > 0 ? parseFloat(good / total * 100) : 0;\n  };\n\n  const average = () => {\n    const map = {\n      good: 1,\n      neutral: 0,\n      bad: -1\n    };\n    const total = all();\n    const averageValoration = parseFloat((good * map.good + neutral * map.neutral + bad * map.bad) / total);\n    return total > 0 ? averageValoration : 0;\n  };\n\n  return all() <= 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No feedback given\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive(), \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n/*\nWe cant have the logic of a component in where we update it\n*/\n\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = params => {\n    return () => {\n      if (params === 'good') {\n        setGood(good + 1);\n      } else if (params === 'neutral') {\n        setNeutral(neutral + 1);\n      } else if (params === 'bad') {\n        setBad(bad + 1);\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      event: handleClick,\n      text: 'good'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      event: handleClick,\n      text: 'neutral'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      event: handleClick,\n      text: 'bad'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 86,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","useState","Button","event","text","Statistics","props","good","neutral","bad","all","positive","total","parseFloat","average","map","averageValoration","App","setGood","setNeutral","setBad","handleClick","params","root","createRoot","document","getElementById","render"],"sources":["C:/Users/joseb/OneDrive - Universidad Complutense de Madrid (UCM)/Documentos/React/React-BootCamp-/part1/unicafe/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { useState } from 'react';\n\nconst Button = ({ event, text }) => {\n  return (\n    <button onClick={event(text)}>\n      {text}\n    </button>)\n}\n\nconst Statistics = (props) => {\n  const {good,neutral,bad} = props;\n  const all = () => {\n    return good + neutral + bad;\n  }\n\n  const positive = () => {\n    const total = all()\n    return total > 0 ? parseFloat(good / total * 100) : 0;\n  }\n  const average = () => {\n    const map = {\n      good: 1,\n      neutral: 0,\n      bad: -1\n    }\n    const total = all()\n    const averageValoration = parseFloat((good*map.good + neutral*map.neutral+bad*map.bad)/ total);\n    return total > 0  ? averageValoration : 0;\n  }\n  return all() <= 0 ? <p>No feedback given</p>\n  :\n  (\n    <div>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {all()}</p>\n      <p>average {average()}</p> \n      <p>positive {positive()} %</p>\n    </div>\n  )\n}\n\n/*\nWe cant have the logic of a component in where we update it\n*/\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n \n\n\n  const handleClick = (params) => {\n    return () => {\n      if (params === 'good') {\n        setGood(good + 1)\n      } else if (params === 'neutral') {\n        setNeutral(neutral + 1);\n      } else if (params === 'bad') {\n        setBad(bad + 1);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button event={handleClick} text={'good'}></Button>\n      <Button event={handleClick} text={'neutral'}></Button>\n      <Button event={handleClick} text={'bad'}></Button>\n      <Statistics good= {good} neutral= {neutral} bad = {bad}></Statistics> \n    </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}